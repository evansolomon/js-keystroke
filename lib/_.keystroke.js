/*!
 * JS keyStroke
 * Copyright (c) Evan Solomon Sun Mar 24 2013
 * Licensed MIT
 */
// Generated by CoffeeScript 1.6.2
(function() {
  _.mixin({
    keyStroke: function(requiredKeys, callback, options) {
      var activeKeys, checkKeystroke, eventMethod, executeCallback;

      if (options == null) {
        options = {};
      }
      options = _.defaults(options, {
        context: this,
        args: [],
        preventDefault: true,
        modKeys: []
      });
      activeKeys = [];
      eventMethod = document.addEventListener ? 'addEventListener' : 'attachEvent';
      document[eventMethod]('keydown', function(event) {
        activeKeys = _.union(activeKeys, event.key || event.keyCode || event.which);
        if (checkKeystroke(event)) {
          return executeCallback(event);
        }
      });
      document[eventMethod]('keyup', function(event) {
        return activeKeys = _.without(activeKeys, event.key || event.keyCode || event.which);
      });
      executeCallback = function(event) {
        if (options.preventDefault) {
          event.preventDefault();
        }
        return callback.apply(options.context, [event].concat(options.args));
      };
      return checkKeystroke = function(event) {
        var requiredKey;

        if (_.isArray(requiredKeys)) {
          return [] === _.difference(activeKeys, requiredKeys);
        } else {
          requiredKey = requiredKeys;
          if (1 + options.modKeys.length !== activeKeys.length) {
            return false;
          }
          if (!_.contains(activeKeys, requiredKey)) {
            return false;
          }
          return _.every(_.map(options.modKeys, function(key) {
            return event[key];
          }), _.identity);
        }
      };
    }
  });

}).call(this);
