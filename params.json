{"name":"JS keyStroke","tagline":"jQuery plugin and underscore mixin for binding callbacks to keyboard shortcuts","body":"## Usage\r\n\r\n`$.keyStroke()` and `_.keyStroke()` take two required arguments (`requriedKeys` and `callback`) and a third optional (`options`) argument.\r\n\r\n**Required**\r\n* `requiredKeys`: Array of JavaScript keyCodes for your keystroke.  Can be an integer (rather than an array) if you only want to use one keyCode, not including modifier keys passed in the `options` argument.  Order is *not* important, and ordered keystrokes are not supported.  [This](http://www.w3.org/2002/09/tests/keys.html) page is helpful for finding keyCodes.\r\n* `callback`: A function to call when your keystroke is executed.\r\n\r\n**Options**\r\n* `args`: An array of arguments to be passed to your callback when your keystroke is exectuted.  The last `keydown`'s `event` object is always passed as the first argument to `callback`. Note: this has *nothing* to do with JavaScript's `arguments` object.\r\n* `context`: The value of `this` for your callback.\r\n* `preventDefault`: Whether or not to `preventDefault()` on the `keydown` event that triggers your keystroke. Defaults to `true`.\r\n* `modKeys`: Array of strings that match `keydown` event properties and can be used to include modifier keys in your keystroke.  The `modKeys` option is only used if `requiredKeys` is a single (non-array) value, otherwise it is ignored.  Examples: `'altKey'`, `'ctrlKey'`, `'metaKey'`, `'shiftKey'`\r\n\r\nOptions should be passed via an object, e.g. `{args: ['foo', 'bar'], context: someValueForThis, modKeys: ['altKey']}`\r\n\r\n## Example\r\n\r\n```javascript\r\nsaveSomething = function( event ) {\r\n\t// ...do something with the keydown event that triggered the keystroke\r\n\tsomeSaveAction();\r\n}\r\n\r\n// Save something on ctrl + s\r\n// s = 83\r\n$.keyStroke( 83, saveSomething, { modKeys: [ 'ctrlKey' ] } );\r\n\r\n// Do the same thing with Underscore instead of jQuery\r\n_.keyStroke( 83, saveSomething, { modKeys: [ 'ctrlKey' ] } );\r\n```\r\n\r\nYou can also use anonymous callbacks.\r\n\r\n```javascript\r\n$.keyStroke( 83, function() { 'You pressed ALT + S!'; }, { modKeys: [ 'altKey' ] } );\r\n```\r\n\r\nSee `/example/index.php` for an example of toggling a request cookie with a keystroke.\r\n\r\n## Installation\r\n\r\nLoad `jquery.keystroke.js` after jQuery, or `_.keystroke.js` after Underscore.  Both plugins come with a matching `min.js` version.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}